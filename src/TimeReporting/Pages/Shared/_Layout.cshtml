@{
  var headerExists = Context.Request.Headers.ContainsKey("X-Up-Version");

  if (!headerExists)
  {
    Layout = "_RootLayout";
  }
}
@if (User.Identity.IsAuthenticated)
{
  <header class="flex-md-nowrap d-flex z-3 justify-content-end p-0 d-md-none" data-bs-theme="dark">
    <ul class="navbar-nav flex-row">
      <li class="nav-item text-nowrap">
        <button class="nav-link px-3 text-dark" type="button" data-bs-toggle="offcanvas" data-bs-target="#sidebarMenu"
                aria-controls="sidebarMenu" aria-expanded="false" aria-label="Toggle navigation">
          <i class="bi bi-list h1"></i>
        </button>
      </li>
    </ul>
  </header>
  <div id="content" class="container-fluid">
    <div class="row">
      <div class="sidebar col-md-3 col-lg-2 p-0 bg-body-tertiary vh-100 position-fixed z-3">
        <div class="offcanvas-md offcanvas-end bg-body-tertiary h-100" tabindex="-1" id="sidebarMenu"
             aria-labelledby="sidebarMenuLabel">
          <div class="offcanvas-header">
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#sidebarMenu"
                    aria-label="Close"></button>
          </div>
          <div class="offcanvas-body d-md-flex flex-column pt-lg-3">
            @await Html.PartialAsync("_LoginPartial")
          </div>
        </div>
      </div>
      <div class="col-md-3 col-lg-2"></div>
      <main role="main" class="col-auto w-100" style="padding-left: 60px" id="main">
        @RenderBody()
      </main>
    </div>
  </div>
}
else
{
  <main class="d-flex justify-content-center align-items-center row">
    @RenderBody()
  </main>
}


@{
  var notificationMessage = TempData["Notification-Message"];
  var notificationStatus = TempData["Notification-Type"];
}
@if (notificationMessage != null && notificationStatus != null)
{
  <div id="toast" up-flashes class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1055;">
    <div id="liveToast" class="toast show text-bg-@notificationStatus" role="alert" aria-live="assertive"
      aria-atomic="true" data-bs-delay="5000">
      <div class="d-flex">
        <div class="toast-body">
          @notificationMessage
        </div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
          aria-label="Close"></button>
      </div>
    </div>
  </div>
}
@await RenderSectionAsync("Scripts", required: false)